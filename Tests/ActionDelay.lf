// Test logical action with delay.
// @author: Marten Lohstroh

target CCpp;

preamble {=
    #include <Arduino.h>;
=}
reactor GeneratedDelay {
    input y_in:int;
    output y_out:int;
    state y_state:int(0);
    logical action act(100 msec);
    reaction(y_in) -> act {=
        self->y_state = y_in->value;
        schedule(act, MSEC(0));
        digitalWrite(LED_BUILTIN, HIGH); 
    =}

    reaction(act) -> y_out {=
        SET(y_out, self->y_state);
        digitalWrite(LED_BUILTIN, LOW); 
    =}
}
reactor Source {
    output out:int;
    reaction(startup) -> out {=
        SET(out, 1);
    =} 
}
reactor Sink {
	input in:int;
	reaction(in) {=
        interval_t elapsed_logical = get_elapsed_logical_time();
        interval_t logical = get_logical_time();
        interval_t physical = get_physical_time();
        if (elapsed_logical != MSEC(100)) {
        	Serial.println("FAILURE");
            exit(1);
        } else {
            Serial.println("SUCCESS. Elapsed logical time is 100 msec.");
        }
	=}
}

main reactor ActionDelay {
    reaction(startup) {=
        pinMode(LED_BUILTIN, OUTPUT);
        Serial.begin(115200);
    =}
    source = new Source();
    sink = new Sink();
    g = new GeneratedDelay();
    
    source.out -> g.y_in;
    g.y_out -> sink.in;
}